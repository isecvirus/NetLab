package v4j.Component.Spinner;

import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import v4j.Component.Panel.PanelBorder;

/**
 *
 * @author virus
 */
public class Spinner extends PanelBorder {

    private Color accent = Color.decode("#84C5EE");
    private int value = 0;
    private int MIN = 0;
    private int MAX = 9;
    private int ARC = 15;

    /**
     * Creates new form Spinner
     */
    public Spinner() {
        initComponents();

        setAccent(accent);

        valueField.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                valueField.transferFocus();
            }
        });

        setValue(value);
        container.setBackground(new Color(0, 0, 0, 0));
    }
    
    public void setSpinnerArc(int a) {
        container.setArc(a + 1);
        setArc(a);
        
        this.ARC = a;
    }
    
    public int getSpinnerArc() {
        return ARC;
    }

    public void setValue(int v) {
        valueField.setText(String.valueOf(v));
        this.value = v;
    }

    public int getValue() {
        return value;
    }

    public void setAccent(Color c) {
        setColor(c);
        increase.setBackground(c);
        decrease.setBackground(c);

        this.accent = c;
    }

    public Color getAccent() {
        return this.accent;
    }

    public int getMIN() {
        return MIN;
    }

    public void setMIN(int MIN) {
        this.MIN = MIN;
    }

    public int getMAX() {
        return MAX;
    }

    public void setMAX(int MAX) {
        this.MAX = MAX;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new v4j.Component.Panel.Panel();
        decrease = new v4j.Component.Button.Button();
        increase = new v4j.Component.Button.Button();
        valueField = new javax.swing.JLabel();

        setArc(15);
        setColor(new java.awt.Color(132, 197, 238));
        setStroke(2);

        decrease.setBackground(new java.awt.Color(132, 197, 238));
        decrease.setForeground(new java.awt.Color(17, 17, 17));
        decrease.setText("-");
        decrease.setArc(5);
        decrease.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        decrease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseActionPerformed(evt);
            }
        });

        increase.setBackground(new java.awt.Color(132, 197, 238));
        increase.setForeground(new java.awt.Color(17, 17, 17));
        increase.setText("+");
        increase.setArc(5);
        increase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        increase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseActionPerformed(evt);
            }
        });

        valueField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        valueField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        valueField.setText("0");
        valueField.setFocusable(false);
        valueField.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        valueField.setIconTextGap(0);
        valueField.setInheritsPopupMenu(false);
        valueField.setRequestFocusEnabled(false);
        valueField.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(decrease, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueField, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(increase, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decrease, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(increase, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(valueField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void increaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseActionPerformed
        setValue(Math.min(getValue() + 1, this.MAX));
    }//GEN-LAST:event_increaseActionPerformed

    private void decreaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseActionPerformed
        setValue(Math.max(getValue() - 1, this.MIN));
    }//GEN-LAST:event_decreaseActionPerformed

    public void eventIncrease(ActionListener event) {
        increase.addActionListener(event);
    }
    
    public void eventDecrease(ActionListener event) {
        decrease.addActionListener(event);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private v4j.Component.Panel.Panel container;
    private v4j.Component.Button.Button decrease;
    private v4j.Component.Button.Button increase;
    private javax.swing.JLabel valueField;
    // End of variables declaration//GEN-END:variables
}
